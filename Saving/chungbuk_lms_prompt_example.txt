First, analyze the network traffic for the Chungbuk LMS website (https://lms.chungbuk.ac.kr/login/index.php) to:

1. Identify the authentication endpoints and required parameters
2. Determine the structure of the login form data
3. Identify the target page URL that contains the announcements
4. Analyze the HTML structure to determine the selectors for extracting data

When analyzing the network:
- Look for POST requests during login to identify form parameters
- Examine the response headers and cookies for session management
- Identify redirects after login to find the dashboard or main page
- Look for requests to pages containing the data you want to scrape
- Analyze the HTML structure to identify the correct selectors for data extraction

After completing the network analysis, create a web scraping script for Chungbuk LMS that follows this structure:

1. The script should be based on the iSASObject prototype pattern
2. It should handle login with username and password
3. It should navigate to the Announcements page
4. It should extract announcements with title, date, and views from the page
5. It should return the data in a structured format following the form_data_template

Here's the specific information:
- Website base URL: https://lms.chungbuk.ac.kr
- Login URL: /login/index.php
- Target page URL: /mod/ubboard/view.php?id=17
- Login form parameters:
  * Username parameter: username
  * Password parameter: password
  * Additional parameters: rememberusername=0
- Data elements to extract:
  * title using selector class="t-subject" with pattern ">" to "</a>"
  * date using selector class="text-center t-date" with pattern "<span[^>]*>" to "</span>"
  * views using selector class="text-center t-viewcount" with pattern ">" to "</"

The script should:
1. Initialize with the website name "Chungbuk LMS" and version
2. Create a constructor function that sets up the host, URL, and other properties
3. Implement a method that:
   - Takes username and password as input
   - Navigates to the login page
   - Submits the login form with the credentials
   - Checks for successful login
   - Navigates to the announcements page
   - Extracts the announcements with title, date
   - Returns the data in a structured format

The output structure should include:
1. Error code and message
2. Form data used for login
3. Extracted announcements with title, date, and views
4. Current URL
When creating web scraping scripts, carefully examine the HTML structure and test different extraction patterns.
For example, when extracting the title from the Chungbuk LMS website:

```javascript
// This pattern works better
var titleSection = StrGrab(item, 'class="t-subject"', '</td>');
var title = StrGrab(titleSection, '">', '</a>').trim();

// Instead of this pattern which may be less reliable
// var titleSection = StrGrab(item, 'class="t-subject"', '</td>');
// var title = StrGrab(titleSection, '<a[^>]*>', '</a>').trim();
```

The pattern `">` specifically targets the end of the attribute section of the `<a>` tag, right before the actual title text begins.
This is more reliable than using `<a[^>]*>` which tries to match the entire opening tag with all its attributes.
Please generate the complete JavaScript code for this scraping task.